{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Control/Control.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Control","query","filterBy","value","type","id","placeholder","onChange","event","currentTarget","App","setQuery","useState","visibleMovies","preparedMovies","correctedData","data","trim","toLowerCase","filter","includes","getPreparedMovies","moviesFromServer","htmlFor","newQuery","ReactDOM","render","document","getElementById"],"mappings":"6tEAEO,MAAMA,EAAY,QAAC,MAAEC,GAAH,SACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BAxBiB,ECCZC,EAAa,QAAC,OAAEC,GAAH,SACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAIX,GACV,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,WAHF,ECHbC,EAAU,QAAC,MACtBC,EADsB,SAEtBC,GAFqB,SAIrB,qBAAKd,UAAU,UAAf,SACE,uBACEe,MAAOF,EACPG,KAAK,OACLC,GAAG,eACHjB,UAAU,QACVkB,YAAY,mBACZC,SAAWC,IACTN,EAASM,EAAMC,cAAcN,MAA7B,KAZe,ECmBhB,MAAMO,EAAM,KACjB,MAAOT,EAAOU,GAAYC,mBAAS,IAE7BC,EAhBR,SAA2BhB,EAA3B,GAA+C,IAAZ,MAAEI,GAAS,EACxCa,EAAiB,IAAIjB,GACzB,MAAMkB,EAAgBC,GAAQA,EAAKC,OAAOC,cAQ1C,OANIjB,IACFa,EAAiBA,EACdK,QAAOhC,GAAS4B,EAAc5B,EAAMK,OAAO4B,SAASL,EAAcd,KAChEc,EAAc5B,EAAMM,aAAa2B,SAASL,EAAcd,OAGxDa,CACR,CAKuBO,CACpBC,EACA,CAAErB,UAGJ,OACE,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOmC,QAAQ,eAAenC,UAAU,QAAxC,0BAGA,cAACY,EAAD,CACEC,MAAOA,EACPC,SAAWsB,IACTb,EAASa,EAAT,SAMR,cAAC,EAAD,CAAY3B,OAAQgB,OAGtB,qBAAKzB,UAAU,UAAf,iCArBJ,ECvBFqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.67c13eaa.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const Control = ({\n  query,\n  filterBy,\n}) => (\n  <div className=\"control\">\n    <input\n      value={query}\n      type=\"text\"\n      id=\"search-query\"\n      className=\"input\"\n      placeholder=\"Type search word\"\n      onChange={(event) => {\n        filterBy(event.currentTarget.value);\n      }}\n    />\n  </div>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { Control } from './components/Control/Control';\n\nfunction getPreparedMovies(movies, { query }) {\n  let preparedMovies = [...movies];\n  const correctedData = data => data.trim().toLowerCase();\n\n  if (query) {\n    preparedMovies = preparedMovies\n      .filter(movie => correctedData(movie.title).includes(correctedData(query))\n      || correctedData(movie.description).includes(correctedData(query)));\n  }\n\n  return preparedMovies;\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n\n  const visibleMovies = getPreparedMovies(\n    moviesFromServer,\n    { query },\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n            <Control\n              query={query}\n              filterBy={(newQuery) => {\n                setQuery(newQuery);\n              }}\n            />\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}